# Copyright (c) 2019-2020 Luca Cappa
# Released under the term specified in file LICENSE.txt
# SPDX short identifier: MIT
name: Matrix
on: [push]

jobs:
  job:
    name: ${{ matrix.os }} - ${{ matrix.buildtype }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        #os: [ubuntu-latest, macos-latest, windows-latest]
        os: [macos-latest, windows-latest]
        buildtype: [Release, Debug]
        include:
          - os: windows-latest
            triplet: x64-windows
          #- os: ubuntu-latest
          #  triplet: x64-linux
          - os: macos-latest
            triplet: x64-osx
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true

      - uses: lukka/get-cmake@latest

      # - name: Set vcpkg's response file path used as part of cache's key.
      #   uses: lukka/set-shell-env@master
      #   with:
      #     VCPKGRESPONSEFILE: ${{ github.workspace }}/cmakeliststxt/vcpkg_${{ matrix.triplet }}.txt
      - name: NPM Install
        run: npm install
      - name: dir
        run: find ${{ github.workspace }}
        if: "!contains( matrix.os, 'windows')"
      - name: dir
        run: gci -recurse ${{ github.workspace }}
        if: contains( matrix.os, 'windows')
      # - name: Restore artifacts, or run vcpkg, build and cache artifacts
      #   uses: lukka/run-vcpkg@v2
      #   id: runvcpkg
      #   with:
      #     vcpkgArguments: "@${{ env.VCPKGRESPONSEFILE }}"
      #     vcpkgDirectory: "${{ github.workspace }}/submodules/vcpkg"
      #     # Ensure the cache key changes any time the content of the response file changes.
      #     appendedCacheKey: ${{ hashFiles( env.VCPKGRESPONSEFILE ) }}

      - name: Run CMake with Ninja
        uses: lukka/run-cmake@v2
        id: runcmake
        with:
          cmakeListsTxtPath: "${{ github.workspace }}/CMakeLists.txt"
          # useVcpkgToolchainFile: true
          buildWithCMakeArgs: "-- -v"
          buildDirectory: ${{ runner.workspace }}/build
          cmakeBuildType: ${{ matrix.buildtype }}
          # cmakeAppendedArgs: -DUSE_LUAJIT=${{ matrix.luajit }}
      # - name: Prints output of run-vcpkg's task
      #   run: echo "root='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}', triplet='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_TRIPLET_OUT }}' "

      - name: dir
        run: find $RUNNER_WORKSPACE
        shell: bash

      - name: Upload libwebrtc binary
        uses: actions/upload-artifact@v2
        with:
          name: libwebrtc-${{ matrix.os }}-${{ matrix.buildtype }}-${{ github.sha }}
          path: ${{ runner.workspace }}/build/external/libwebrtc/build/**

      - name: Upload built binary
        uses: actions/upload-artifact@v2
        with:
          name: test-${{ matrix.os }}-${{ matrix.buildtype }}-${{ github.sha }}
          path: ${{ runner.workspace }}/build/mz*

      - name: Upload built binary
        uses: actions/upload-artifact@v2
        with:
          name: test-${{ matrix.os }}-${{ matrix.buildtype }}-${{ github.sha }}
          path: ${{ runner.workspace }}/build/*.dll